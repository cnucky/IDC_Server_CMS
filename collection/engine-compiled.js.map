{"version":3,"sources":["engine.js"],"names":[],"mappings":";;AAAA;AACA,IAAI,SAAS,QAAQ,uBAAR,CAAb;AACA;AACA,QAAQ,SAAR,GAAoB,UAAC,GAAD,EAAK,GAAL,EAAa;AAC/B;AACA,SAAO,IAAP,CAAY,EAAZ,EAAe,EAAC,cAAa,CAAd,EAAgB,iBAAgB,CAAhC,EAAf,EAAkD,UAAC,GAAD,EAAK,UAAL,EAAoB;AACpE,QAAG,GAAH,EAAO;AACL,aAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,aAA5B,EAAT,CAAP;AACD;AACD,WAAO,IAAI,MAAJ,CAAW,QAAX,EAAoB;AACzB,aAAO,MADkB;AAEzB,eAAS,IAAI,OAAJ,CAAY,QAFI;AAGzB,YAAM;AAHmB,KAApB,CAAP;AAKD,GATD;AAUD,CAZD;;AAcA;;AAEA,QAAQ,YAAR,GAAuB,UAAC,GAAD,EAAK,GAAL,EAAa;AAClC;AACA,MAAI,KAAK,IAAI,KAAJ,CAAU,EAAnB;AACA;AACA,SAAO,MAAP,CAAc,EAAC,KAAI,EAAL,EAAd,EAAuB,UAAC,GAAD,EAAS;AAC9B,QAAG,GAAH,EAAO;AACL,aAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,YAA5B,EAAT,CAAP;AACD;AACD,WAAO,IAAI,QAAJ,CAAa,MAAb,CAAP;AACD,GALD;AAMD,CAVD;;AAYA;AACA,QAAQ,UAAR,GAAqB,UAAC,GAAD,EAAK,GAAL,EAAa;AAChC;AACA,MAAI,aAAa,IAAI,IAAJ,CAAS,UAA1B;AACA,MAAI,gBAAgB,IAAI,IAAJ,CAAS,aAA7B;AACA;AACA,MAAG,cAAc,EAAd,IAAoB,cAAc,IAArC,EAA0C;AACxC,WAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,UAA5B,EAAT,CAAP;AACD;AACD,MAAG,iBAAiB,EAAjB,IAAuB,iBAAiB,IAA3C,EAAgD;AAC9C,WAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,UAA5B,EAAT,CAAP;AACD;AACD;AACA,SAAO,OAAP,CAAe,EAAC,iBAAgB,aAAjB,EAAf,EAA+C,UAAC,GAAD,EAAK,MAAL,EAAgB;AAC7D,QAAG,GAAH,EAAO;AACL,aAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,aAA5B,EAAT,CAAP;AACD;AACD,QAAG,MAAH,EAAU;AACR,aAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,gBAA5B,EAAT,CAAP;AACD;AACD,WAAO,MAAP,CAAc;AACZ,oBAAa,UADD;AAEZ,uBAAgB;AAFJ,KAAd,EAGG,UAAC,GAAD,EAAS;AACV,UAAG,GAAH,EAAO;AACL,eAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,OAAd,EAAsB,OAAM,oBAA5B,EAAT,CAAP;AACD;AACD;AACA,aAAO,IAAI,IAAJ,CAAS,EAAC,cAAa,SAAd,EAAwB,OAAM,QAA9B,EAAT,CAAP;AACD,KATD;AAUD,GAjBD;AAkBD,CA9BD","file":"engine-compiled.js","sourcesContent":["//加载机房管理Schema;\r\nlet Engine = require('../modules/engineRoom');\r\n//-----------------机房管理get路由\r\nexports.getEngine = (req,res) => {\r\n  //查询数据库获取机房信息\r\n  Engine.find({},{'engineName':1,'engineAddress':1},(err,engineInfo) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'机房查询出错请稍后再试'});\r\n    }\r\n    return res.render('engine',{\r\n      title: '机房管理',\r\n      session: req.session.username,\r\n      docs: engineInfo\r\n    });\r\n  });\r\n};\r\n\r\n//-----------------机房管理删除路由\r\n\r\nexports.deleteEngine = (req,res) => {\r\n  //获取query字段\r\n  let id = req.query.id;\r\n  //删除处理\r\n  Engine.remove({_id:id},(err) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'系统错误: 无法删除'});\r\n    };\r\n    return res.redirect('back');\r\n  });\r\n};\r\n\r\n//-----------------机房管理添加机房post处理逻辑\r\nexports.postEngine = (req,res) => {\r\n  //获取表单提交的数据\r\n  let engineName = req.body.engineName;\r\n  let engineAddress = req.body.engineAddress;\r\n  //判断 机房名称以及机房地址是否为空\r\n  if(engineName == '' || engineName == null){\r\n    return res.json({'postStatus':'error','msg':'机房名称不能为空'});\r\n  }\r\n  if(engineAddress == '' || engineAddress == null){\r\n    return res.json({'postStatus':'error','msg':'机房地址不能为空'});\r\n  };\r\n  //准备写入到engineRoom模板\r\n  Engine.findOne({'engineAddress':engineAddress},(err,engine) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'机房查询出错请稍后再试'});\r\n    }\r\n    if(engine){\r\n      return res.json({'postStatus':'error','msg':'机房地址已存在,请勿重复添加'});\r\n    }\r\n    Engine.create({\r\n      'engineName':engineName,\r\n      'engineAddress':engineAddress\r\n    }, (err) => {\r\n      if(err){\r\n        return res.json({'postStatus':'error','msg':'系统错误: 添加机房失败，请重新再是'});\r\n      }\r\n      //添加完成\r\n      return res.json({'postStatus':'success','msg':'机房添加完成'})\r\n    });\r\n  });\r\n};"]}