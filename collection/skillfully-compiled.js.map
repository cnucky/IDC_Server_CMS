{"version":3,"sources":["skillfully.js"],"names":[],"mappings":"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","file":"skillfully-compiled.js","sourcesContent":["//引入mongoose对象以及依赖的其他模型\r\nconst Ip = require('../modules/ip');\r\nconst Uip = require('../modules/uip');\r\nconst Engine = require('../modules/engineRoom');\r\nconst Use = require('../modules/use');\r\nconst Server = require('../modules/server');\r\nconst Cabinets = require('../modules/cabinet');\r\nconst Host = require('../modules/serverHost');\r\nconst User = require('../modules/user');\r\nconst serverP = require('../modules/serverPrice');\r\nconst mongoose = require('mongoose');\r\n//------------------财务管理get路由\r\nexports.getSkillfully = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  let queryS = {'serverMark':true};\r\n  let toIndex = 'skillfully';\r\n  getIndexS(page,limits,req,res,queryS,toIndex);\r\n};\r\n//服务器下架处理逻辑\r\nexports.serverDown = (req,res) => {\r\n  //获取表单信息\r\n  let id = req.body.id;\r\n  let time = new Date();\r\n  Server.update({'_id':id},{'formSaleTime':time,'serverMark':false},(err) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'服务器下架出错请稍候再试'});\r\n    }\r\n    Host.create({\r\n      'server.server':mongoose.Types.ObjectId(id),\r\n      'server.serverName':req.session.username,\r\n      'server.serverTime':new Date(),\r\n      'server.serverInfoS':'服务器下架'\r\n    },(err,createData) => {\r\n      if(err){\r\n        return res.json({'postStatus':'error','msg':'服务器维护记录写入出错请稍候再试'});\r\n      }\r\n      return res.json({'postStatus':'success','msg':'服务器下架完成'});\r\n    });\r\n  });\r\n};\r\n\r\n\r\n//-----------------------------即将5天到期的服务器\r\nexports.thereDay = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  let toIndex = '5day';\r\n  let timeData = new Date();\r\n  let getYear = timeData.getFullYear();\r\n  let getMonth = timeData.getMonth()+1;\r\n  let getDates = timeData.toString(timeData.setDate(timeData.getDate()+5));\r\n  if(getDates < 10){\r\n    getDates = '0'+getDates\r\n  }\r\n  let queryS = {'serverMark':true,endTime:{'$lte':getDates}};\r\n  getIndexS(page,limits,req,res,queryS,toIndex)\r\n};\r\n\r\n//-----------------------------即将7天到期的服务器\r\nexports.serveDay = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  let toIndex = '7day';\r\n  let timeData = new Date();\r\n  let getYear = timeData.getFullYear();\r\n  let getMonth = timeData.getMonth()+1;\r\n  let getDates = timeData.toString(timeData.setDate(timeData.getDate()+7));\r\n  if(getDates < 10){\r\n    getDates = '0'+getDates\r\n  }\r\n  let queryS = {'serverMark':true,endTime:{'$lte':getDates}};\r\n  getIndexS(page,limits,req,res,queryS,toIndex)\r\n};\r\n\r\n//-----------------------------即将15天到期的服务器\r\nexports.twoFDay = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  let toIndex = '15day';\r\n  let timeData = new Date();\r\n  let getYear = timeData.getFullYear();\r\n  let getMonth = timeData.getMonth()+1;\r\n  let getDates = timeData.toString(timeData.setDate(timeData.getDate()+15));\r\n  if(getDates < 10){\r\n    getDates = '0'+getDates\r\n  }\r\n  let queryS = {'serverMark':true,endTime:{'$lte':getDates}};\r\n  getIndexS(page,limits,req,res,queryS,toIndex)\r\n};\r\n//----------------------------已过期服务器查询\r\nexports.getTimes = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  let toIndex = 'serverTime';\r\n  let timeData = new Date();\r\n  console.log(timeData);\r\n  let queryS = {'serverMark':true,endTime:{'$lt':timeData}};\r\n  getIndexS(page,limits,req,res,queryS,toIndex)\r\n};\r\n//-----------------------------服务器续费Get路由\r\nexports.serverPics = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  Server.count({'serverMark':true},(err,total) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'无法查询服务器总条数'})\r\n    }\r\n    Server.find({'serverMark':true},null,{'skip':(page - 1)* limits,'limit':limits},(err,findData) => {\r\n      if(err){\r\n        return res.json({'postStatus':'error','msg':'服务器查询出错，当前未有启用服务器'})\r\n      }\r\n      return res.render('serverPics',{\r\n        title:'财务管理',\r\n        session:req.session.username,\r\n        serverDocs: findData,\r\n        isFirstPage: (page - 1) == 0,\r\n        isLastPage: (page -1)*limits + Number.parseInt(findData.length) == total,\r\n        page: page,\r\n        maxPage : Math.floor((total + limits -1) / limits),\r\n      });\r\n    });\r\n  });\r\n};\r\n//---------------------------服务器续费post路由\r\nexports.serverPrice = (req,res) => {\r\n  let id = req.body.id;\r\n  let serverPrice = req.body.serverPrice;\r\n  let endTime = req.body.endTime;\r\n  let serverPriceInfo = req.body.serverPriceInfo;\r\n  let username = req.session.username;\r\n  let time = new Date();\r\n  Server.update({'_id':id},{'renew.renewTime':time,'renew.renewPrice':serverPrice,'endTime':endTime,'price':serverPrice},(err) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'服务器更新数据失败'})\r\n    }\r\n    User.findOne({'user.serverTo':mongoose.Types.ObjectId(id)},{'user.webName':1},(err,userId) => {\r\n      if(err){\r\n        return res.json({'postStatus':'error','msg':'原用户查询失败,请稍后再试'});\r\n      }\r\n      //插入新的数据\r\n      serverP.create({\r\n        'serverId': id,\r\n        'username':username,\r\n        'priceTime': time,\r\n        'price': serverPrice,\r\n        'priceInfo':serverPriceInfo,\r\n        'endTime':endTime,\r\n        'serverY':userId.user.webName\r\n      },(err,createData) => {\r\n        if(err){\r\n          return res.json({'postStatus':'error','msg':'服务器续费记录插入失败'})\r\n        }\r\n        return res.json({'postStatus':'success','msg':'服务器续费完成'})\r\n      });\r\n    });\r\n  });\r\n};\r\n//---------通用function\r\nfunction getIndexS(page,limits,req,res,queryS,toIndex){\r\n  Server.count(queryS,(err,total) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'无法查询服务器总条数'})\r\n    }\r\n    Server.find(queryS,null,{'skip':(page - 1)* limits,'limit':limits,'sort':{'endTime':1}},(err,findData) => {\r\n      if(err){\r\n        return res.json({'postStatus':'error','msg':'服务器查询出错，当前未有启用服务器'})\r\n      }\r\n      return res.render(toIndex,{\r\n        title:'财务管理',\r\n        session:req.session.username,\r\n        serverDocs: findData,\r\n        isFirstPage: (page - 1) == 0,\r\n        isLastPage: (page -1)*limits + Number.parseInt(findData.length) == total,\r\n        page: page,\r\n        maxPage : Math.floor((total + limits -1) / limits),\r\n      });\r\n    });\r\n  });\r\n};\r\n\r\n//-----------------------------服务器续费记录\r\nexports.priceHost = (req,res) => {\r\n  let page = req.query.page ? Number.parseInt(req.query.page) : 1;\r\n  let limits = 15;\r\n  serverP.count({},(err,total) => {\r\n    if(err){\r\n      return res.json({'postStatus':'error','msg':'服务器续费记录总条数查询失败'})\r\n    }\r\n    serverP\r\n        .find({})\r\n        .skip((page-1)*limits)\r\n        .limit(limits)\r\n        .populate('serverId')\r\n        .exec((err,findData) => {\r\n          if(err){\r\n            return res.json({'postStatus':'error','msg':'服务器续费记录查询失败'})\r\n          }\r\n          return res.render('priceHost',{\r\n            title:'财务管理',\r\n            session:req.session.username,\r\n            serverDocs: findData,\r\n            isFirstPage: (page - 1) == 0,\r\n            isLastPage: (page -1)*limits + Number.parseInt(findData.length) == total,\r\n            page: page,\r\n            maxPage : Math.floor((total + limits -1) / limits),\r\n          });\r\n        });\r\n  });\r\n};\r\n\r\n"]}